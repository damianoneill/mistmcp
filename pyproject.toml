[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mistmcp"
version = "0.0.0"
authors = [{ name = "Thomas Munzer", email = "tmunzer@juniper.net" }]
description = "MCP Server to provide Mist API Access to LLMs"
keywords = ["Mist", "Juniper", "MCP", "LLM"]
license = { text = "MIT License" }
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Intended Audience :: System Administrators",
  "Intended Audience :: Telecommunications Industry",
  "Topic :: System :: Networking",
  "Development Status :: 4 - Beta",
]
dependencies = ["FastMCP", "marvin", "mcp[cli]>=1.9.2", "mistapi>=0.56.1"]

[project.urls]
"Source" = "https://github.com/tmunzer/mistmcp"
"Bug Tracker" = "https://github.com/tmunzer/mistmcp/issues"

[project.scripts]
mistmcp = "mistmcp.__main__:main"


# UV-specific configuration
[tool.uv]
dev-dependencies = [
  # Testing dependencies
  "pytest>=8.4.0",
  "pytest-cov>=6.1.1",
  "responses>=0.25.7",
  "factory-boy>=3.3.3",
  # "pytest-mock>=3.14.1",
  # "pytest-httpx>=0.35.0",
  "pytest-asyncio",
  # "faker>=37.3.0",
  # "httpx>=0.28.1",

  # Code quality
  "ruff>=0.11.13",

  # Development dependencies
  "twine>=6.1.0",
  "build>=1.2.2.post1",
  "pyyaml>=6.0.2",
  "urllib3>=2.4.0",
]


# Hatchling configuration (replaces setup.cfg)
[tool.hatchling.build.targets.wheel]
packages = ["src/mistmcp"]

[tool.hatchling.build.targets.sdist]
include = ["/src", "/tests", "/README.md", "/pyproject.toml"]

# Test configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = ["unit: Unit tests", "integration: Integration tests"]
asyncio_mode = "auto"


addopts = [
  "-v",
  "--tb=short",
  "--strict-markers",
  "--disable-warnings",
  "--cov=src/mistmcp",
  "--cov-report=html",
  "--cov-report=term-missing",
  "--cov-fail-under=30",
  "--cov-config=pyproject.toml",
]

[tool.coverage.run]
source = ["src/mistmcp"]
omit = [
  "src/mistmcp/tools/*",
  "*/test_*.py",
  "*/__pycache__/*",
  "mist.openapi.yaml",
]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "raise AssertionError",
  "raise NotImplementedError",
]

# Ruff configuration - exclude autogenerated API code
[tool.ruff]
#exclude = ["src/mistapi/api/**/*.py", "mist.openapi.yaml"]


[tool.bandit]
targets = ["src"]
exclude_dirs = ["tests"]


[tool.pylic]
safe_licenses = [
  "Apache-2.0",
  "MIT License",
  "MIT",
  "PSF-2.0",
  "BSD License",
  "BSD-2-Clause",
  "BSD-3-Clause",
  "ISC License (ISCL)",
]
