{"admins": {"tools": ["getAdminRegistrationInfo"], "description": "Admin API calls can be used to create, manage or authenticate Mist administrators.\n\nTo register administrators into an existing MSP account or Organization, please check: * [Invite Msp Admin]($e/MSPs%20Admins/inviteMspAdmin) * [Invite Org Admin]($e/Orgs%20Admins/inviteOrgAdmin)"}, "admins_lookup": {"tools": [], "description": "Admin Lookup API Call is mainly used by Web UIs to know if a user must be redirected to an SSO URL for login."}, "sites_secintel_profiles": {"tools": ["listSiteSecIntelProfilesDerived"], "description": "Sky ATP Secintel Profile"}, "orgs": {"tools": ["getOrg", "searchOrgEvents"], "description": "An organization usually represents a customer - which has inventories, licenses. An Organization can contain multiple sites. A site usually represents a deployment at the same location (a campus, an office)."}, "orgs_alarms": {"tools": ["countOrgAlarms", "searchOrgAlarms"], "description": "Alarms are triggered based on certain events. Alarms could be configured using an Alarm Template."}, "orgs_alarm_templates": {"tools": ["listOrgAlarmTemplates", "listOrgSuppressedAlarms", "getOrgAlarmTemplate"], "description": "An Alarm Template is a set of Alarm Rules that could be applied to\none or more sites (while each site can only pick one Alarm Template), or to the\nwhole org.\n\n\nOnce created, the Alarm template must be assigned with the `alarmtemplate_id` attribute to one of the following\n* the whole org with the [Update Org]($e/Orgs/updateOrg) API Call\n* one or multiple sites with the [Update Site Info]($e/Sites/updateSiteInfo) API Call"}, "orgs_ap_templates": {"tools": ["listOrgAptemplates", "getOrgAptemplate"], "description": "AP Templates are defining Wi-Fi and AP settings that can be assigned to Access Points based on different types of rules.\n\nAP Templates must be assigned to one or multiple sites to be used."}, "orgs_antivirus_profiles": {"tools": ["listOrgAntivirusProfiles", "getOrgAntivirusProfile"], "description": null}, "orgs_clients___marvis": {"tools": [], "description": "Marvis Invites can be generated for (and belongs to) an Org. They can be generated by an Admin of an Org and can be revoked at anytime.\n\nMarvis Clients are devices that have the Marvis Android Client installed on them and are connected to a Juniper Mist AP.\n\nThey provide detailed data and telemetry about the client's wireless connection, including information about roaming behavior, connection type, and wireless properties."}, "orgs_marvis_invites": {"tools": ["listOrgMarvisClientInvites", "getOrgMarvisClientInvite"], "description": "Marvis Clients are devices that have the Marvis Android Client installed on them and are connected to a Juniper Mist AP.\n\nThey provide detailed data and telemetry about the client's wireless connection, including information about roaming behavior, connection type, and wireless properties."}, "orgs_clients___nac": {"tools": ["countOrgNacClients", "countOrgNacClientEvents", "searchOrgNacClientEvents", "searchOrgNacClients"], "description": "NAC Clients are devices connected to the network and authenticated by Juniper Mist Access Assurance."}, "orgs_clients___wan": {"tools": ["countOrgWanClientEvents", "countOrgWanClients", "searchOrgWanClientEvents", "searchOrgWanClients"], "description": "WAN Clients are devices connected to a Juniper SRX or SSX gateway monitor or managed by Mist"}, "orgs_clients___wired": {"tools": ["countOrgWiredClients", "searchOrgWiredClients"], "description": "Wired Clients are Wired devices connected to a Juniper switch monitored or managed by Mist."}, "orgs_clients___wireless": {"tools": ["countOrgWirelessClients", "searchOrgWirelessClientEvents", "searchOrgWirelessClients", "countOrgWirelessClientsSessions", "searchOrgWirelessClientSessions"], "description": "Wireless Clients are Wi-Fi devices connected to a Juniper Mist Access Point."}, "orgs_clients___sdk": {"tools": [], "description": "SDK Clients are devices that have installed an application using the Mist Software Development Kit (SDK).\n\nThese clients can provide specific data and information that is not available without the installation of the SDK application."}, "orgs_device_profiles": {"tools": ["listOrgDeviceProfiles", "getOrgDeviceProfile"], "description": "While Templates / RF Templates / Network Templates / Gateway Templates provides powerful ways to control how a Device\\'s configuration is derived for a Site. There are cases where you\\'d like another level of control at the Org Level.\nA Device Profile contains a subset of Device\\'s configurations you\\'d like a device to have. It will be merged at runtime when we\\'re provisioning an AP."}, "orgs_devices": {"tools": ["listOrgDevices", "countOrgDevices", "countOrgDeviceEvents", "searchOrgDeviceEvents", "countOrgDeviceLastConfigs", "searchOrgDeviceLastConfigs", "listOrgApsMacs", "searchOrgDevices", "listOrgDevicesSummary", "getOrgJuniperDevicesCommand"], "description": "Devices are any Network device managed or monitored by Juniper Mist. It can be * Wireless Access Points * Juniper Switch (EX, QFX) * Juniper WAN Gateway (SRX, SSR) * Mist Edges * Other or 3rd party devices, like Cradlepoint Devices"}, "orgs_devices___ssr": {"tools": ["getOrg128TRegistrationCommands"], "description": "API Calls specific to SSR devices"}, "orgs_evpn_topologies": {"tools": ["listOrgEvpnTopologies", "getOrgEvpnTopology"], "description": "EVPN allows an alternative but more efficient LAN architecture utilizing VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding plane.\nIn our implementation, following the steps to deploy EVPN topologies in a Site"}, "orgs_devices___others": {"tools": ["listOrgOtherDevices", "countOrgOtherDeviceEvents", "searchOrgOtherDeviceEvents", "getOrgOtherDevice"], "description": "API Call for 3rd party devices"}, "orgs_gateway_templates": {"tools": ["listOrgGatewayTemplates", "getOrgGatewayTemplate"], "description": "Gateway Template is applied to a site for gateway(s) in a site.\n\nWhen Templates are not used, Site Setting holds settings for multiple device types and they can differ to set device_type specific configs, use this whatever is defined under `gateway` will overwrite/shadow the one at root-level"}, "orgs_guests": {"tools": ["listOrgGuestAuthorizations", "countOrgGuestAuthorizations", "searchOrgGuestAuthorization", "getOrgGuestAuthorization"], "description": "Guests are users who are accessing the wi-fi network as a temporary or non-permanent visitor."}, "orgs_idp_profiles": {"tools": ["listOrgIdpProfiles", "getOrgIdpProfile"], "description": "An IDP profile is a set of predefined rules and actions that determine how the Intrusion Detection and Prevention (IDP) system handles network traffic.\n\nIt allows you to selectively enforce attack detection and prevention techniques on your network. The profile includes a set of IDP signatures and rules recommended by Juniper Networks, and each attack type and severity has a specific action associated with it, such as closing the TCP connection, dropping the packet, or sending an alert.\n\nThe IDP profile can be applied to an application policy to monitor and analyze network events for signs of incidents, violations, or threats to security policies."}, "orgs_inventory": {"tools": ["getOrgInventory", "countOrgInventory", "searchOrgInventory"], "description": "The Org Inventory allows administrators to view and manage all devices registered (claimed) to the Organization."}, "orgs_advanced_anti_malware_profiles": {"tools": ["listOrgAAMWProfiles", "getOrgAAMWProfile"], "description": "The \"Advanced Anti-Malware\" feature in Sky ATP is a comprehensive security solution that leverages multiple techniques to detect and prevent malware attacks. Here are the key components of this feature:\n* **Flow-Based Antivirus Policy**: The policy checks inbound and outbound traffic to stop malware, quarantine infected systems, prevent data exfiltration, and disrupt lateral movement.\n* **Machine Learning-Based Threat Detection**: Sky ATP uses machine learning to identify zero-day threats and detect malware that traditional antivirus software might miss.\n* **Integration with SRX Series Firewalls**: The SRX Series firewalls integrate with Sky ATP to block known malicious file downloads and outbound Command and Control (C&C) traffic. This integration ensures that malware is quickly identified and dropped before it can infect a host.\n* **Real-Time Threat Intelligence**: Sky ATP distributes third-party threat intelligence feeds to all ATP-subscribed SRX firewalls for immediate action, reducing the attack surface.\n\nThese components collectively provide a robust and automated threat detection and remediation solution, simplifying cybersecurity infrastructure and processes for organizations.\n\nFor more details, you can refer to the Juniper documentation on advanced anti-malware policy configuration."}, "orgs_integration_skyatp": {"tools": ["getOrgSkyAtpIntegration"], "description": "Sky Advanced Threat Prevention (Sky ATP) is a cloud-based security designed to detect and mitigate advanced threats in real-time, ensuring the security and integrity of your network.  \nThe integration of Sky ATP with Mist is a strategic move to enhance the security posture of wireless networks by leveraging the capabilities of both solutions.\n\n\nThe integration of Sky ATP with Mist enhances the security of wireless networks by providing real-time threat alerts and mitigation capabilities. Here are the key benefits of this integration:\n\n* Enhanced Security: Adds another layer of security to the robust mechanisms already in place within the Mist WLAN platform. It leverages artificial intelligence (AI) for tighter security, lower operational costs, and optimized user experience.\n* Real-Time Threat Detection: Quickly identifies devices on the network that are infected with malware and takes appropriate actions. This ensures that security risks are assessed and mitigated promptly when users and devices are connected to wireless networks.\n* Improved Device Tracking: Allows for better tracking of client hosts as Mist supplies client MAC addresses to Juniper ATP Cloud. This information is crucial for identifying and mitigating threats.\n* Streamlined Security Events: Threat alerts detected by Juniper SRX Series Firewalls and ATP Cloud are automatically streamed to Mist, enabling administrators to quickly assess security risks and take appropriate actions such as quarantine or enforce security policies."}, "orgs_licenses": {"tools": ["GetOrgLicenseAsyncClaimStatus", "getOrgLicensesSummary", "getOrgLicensesBySite"], "description": "Licenses are a type of service or access that customers can purchase for various features or services offered by a company.\n\nSubscriptions can have different statuses, such as active, expired, exceeded, or trial, depending on their validity and usage. The status of a subscription determines whether it is currently active and valid, has expired, has exceeded the allowed usage limit, or is in a trial period.\n\nLicenses can be activated using an activation code, and the activation process confirms the inputted code and activates the subscription."}, "orgs_logs": {"tools": ["listOrgAuditLogs", "countOrgAuditLogs"], "description": "Audit Logs are records of activities initiated by users, providing a history of actions such as accessing, creating, updating, or deleting resources or components at the Org level.\n\nThese logs allow superusers and network administrators to track and maintain a record of user actions, including who performed specific actions and when.\n\nAudit logs are useful for monitoring user activity, investigating security breaches, ensuring compliance with regulations, and tracing configuration changes in a network.\n\nThey can be filtered and analyzed to view specific information and granular-level details of each event."}, "orgs_marvis": {"tools": ["troubleshootOrg"], "description": "Marvis is an AI-driven, interactive virtual network assistant that streamlines network operations, simplifies troubleshooting, and provides an enhanced user experience.\nIt offers real-time network visibility, comprehensive insights, and automation customized for your network.\nMarvis can proactively identify issues, interpret their impact, determine root causes, and recommend fixes.\nIt consists of components such as Marvis Actions, Marvis Minis, Conversational Assistant, Marvis Client, and Marvis Query Language."}, "orgs_maps": {"tools": [], "description": "These API Calls to import Site Maps at the Org level"}, "orgs_mxclusters": {"tools": ["listOrgMxEdgeClusters", "getOrgMxEdgeCluster"], "description": "A Mist Edge Cluster (MxCluster) is a group of Juniper Mist Edge devices that are configured to work together in order to provide high availability and load balancing for the tunneling of traffic from access points (APs). The cluster can consist of a single edge device or multiple edge devices."}, "orgs_mxedges": {"tools": ["listOrgMxEdges", "countOrgMxEdges", "countOrgSiteMxEdgeEvents", "searchOrgMistEdgeEvents", "searchOrgMxEdges", "getOrgMxEdgeUpgradeInfo", "getOrgMxEdge"], "description": "A Mist Edge (MxEdge) is a physical or virtual appliance that is deployed in a network to provide centralized data path for user traffic or as a RADIUS Proxy, which was traditionally performed by legacy wireless controllers. It keeps all the control and management functions in the Mist Cloud, offering a microservices architecture to the campus."}, "orgs_mxtunnels": {"tools": ["listOrgMxTunnels", "getOrgMxTunnel"], "description": "A Mist Tunnel (MxTunnel) is a configuration object that allows for the tunneling of user VLANs from the Access Points (APs) to a central point on the network.\n\nIt specifies the VLAN IDs that need to be tunneled and assigns the tunnel to a primary or secondary mist edge cluster. The mist tunnel also includes settings for tunnel fail over, auto-preemption, and other parameters related to tunnel termination services."}, "orgs_nac_fingerprints": {"tools": ["countOrgClientFingerprints", "searchOrgClientFingerprints"], "description": "The NAC IDP allows users to integrate with various Identity Providers (IDPs) to enhance authentication and access control. Admins can configure identity providers such as microsoft EntraID, okta workforce identity cloud, and google workspace idp."}, "orgs_nac_tags": {"tools": ["listOrgNacTags", "getOrgNacTag"], "description": "NAC Tags are the building blocks to compose nacrules.\nThey can either appear in the \"matching\" / \"not_matching\" sections of a nacrule, in which case they play the role of classifiers, or they could appear in the \"apply_tags\" section of the of a nacrule, in which case they influence the result.\nWhen the \"type\" field of nactag is \"match\", it can be used as the classifier of a nacrule.\n- \"match\" field specifies the attribute name and \"values\" field specifies the list of attribute values to match on.\n- When multiple values are specified, its treated as an OR condition between those values. This behavior can be changed by setting \"match_all\" field to \"true\", in which case it is treated as an AND condition between those values.\n- By default, exact match is performed.\n\nThis behavior can be changed as follows:\n- Adding `-` at the beginning will perform suffix match (ex: -staff will match foo-staff and bar-staff)\n- Adding `-` at the end will perform prefix match (ex: foo- will match foo-staff and foo-interns)\n- Adding `!` at both ends will perform substring match (ex: printer will match hp-printer-bldg1, brother-printer-lab)\n- Adding `!` at the beginning will perform negation of the match (ex: !ssid-guest will match any string that is not ssid-guest)\n- Note: when negation should be used along with suffix/substring operation, ! should always precede \\* (ex: !guest will match any string that is not ending with guest)\n\nWhen the \"type\" field of nactag is NOT \"match\", it can be used as the result of a nacrule. \"type\" field identifies the action to take and the corresponding field would provide any associated parameters to that action. When the \"type\" field of nactag is NOT \"match\" and is any of the result type also supported by usermac table(`vlan`), \"allow_usermac_override\" field can be set to true to allow the override by usermac result"}, "orgs_stats": {"tools": ["getOrgStats"], "description": "API Calls to retrieve statistics about the Mist Org and related items"}, "orgs_stats___assets": {"tools": ["listOrgAssetsStats", "countOrgAssetsByDistanceField", "searchOrgAssets"], "description": "API Calls to retrieve statistics about the Assets at the Org level"}, "orgs_stats___bgp_peers": {"tools": ["countOrgBgpStats", "searchOrgBgpStats"], "description": "API Calls to retrieve statistics about the BGP Peers (WAN Assurance)"}, "orgs_stats___devices": {"tools": ["listOrgDevicesStats"], "description": "API Calls to retrieve statistics about the Mist Managed and Monitored Devices at the Org level\n\n\nBy default, the API call only returns a subset of the available fields. Additional fields can be requested by adding the query parameter `fields=` and the list of fields, or `fields=*` to retrieve all the available fields."}, "orgs_stats___mxedges": {"tools": ["listOrgMxEdgesStats", "getOrgMxEdgeStats"], "description": "API Calls to retrieve statistics about the Mist Edges at the Org level"}, "orgs_stats___other_devices": {"tools": ["getOrgOtherDeviceStats"], "description": "API Calls to retrieve statistics about the Other/3rd party devices at the Org level"}, "orgs_stats___ports": {"tools": ["searchOrgSwOrGwPorts"], "description": "API Calls to retrieve statistics about the Wired Ports at the Org level"}, "orgs_stats___sites": {"tools": ["listOrgSiteStats"], "description": "API Calls to retrieve statistics about the Organization Sites"}, "orgs_stats___tunnels": {"tools": ["countOrgTunnelsStats", "searchOrgTunnelsStats"], "description": "API Calls to retrieve statistics about the Mist Tunnels at the Org level"}, "orgs_stats___vpn_peers": {"tools": ["countOrgPeerPathStats", "searchOrgPeerPathStats"], "description": "API Calls to retrieve statistics about the VPN Peers (WAN Assurance)"}, "orgs_nac_rules": {"tools": ["listOrgNacRules", "getOrgNacRule"], "description": "The NAC Rules (or Auth Policies) are a set of rules that devices and users must fulfill in order to gain access to the network and use network resources.\n\nJuniper Mist Access Assurance evaluates authentication requests based on the specified policy conditions. If a user or device satisfies the conditions, Mist Access Assurance applies actions that either allow or deny access to the user or device.\n\nThese actions can also apply attributes such as VLAN and role to the allowed users. Mist Access Assurance uses \"NAC Tags\" (or Auth Policy Labels) as the policy matching criteria and as a policy action for allowed users. NAC Tags can be managed with the [Orgs NAC Tags API Calls]($h/Orgs%20NAC%20Tags/_overview)"}, "orgs_network_templates": {"tools": ["listOrgNetworkTemplates", "getOrgNetworkTemplate"], "description": "A Network Template is a configuration template that allows for the consistent and standardized configuration of switches across an organization's network infrastructure.\n\nIt includes settings such as radius and ntp servers, shared elements like iot or corporate networks, and port profiles for specific devices.\n\nSwitch templates can be applied at the site level, and they make the initial setup of switches easy and adaptable to specific site or switch settings."}, "orgs_networks": {"tools": ["listOrgNetworks", "getOrgNetwork"], "description": "A Network refers to a group or segment of users that are defined for use across the entire organization."}, "orgs_psks": {"tools": ["listOrgPsks", "getOrgPsk"], "description": "A multi PSK (Pre-Shared Key) is a feature that allows the use of multiple PSKs for securing network connections.\n\nIt provides a simple and comprehensive way to onboard client devices without relying on client mac addresses.\n\nEach psk has its own key name, which can be used for user-level accountability, key rotation, and visibility in the management platform. It supports the creation, rotation, and auto-expiration of PSKs, and allows vlan assignment and role assignment for dynamic per-user policies.\n\nMulti PSKs create virtual broadcast domains and can be used for end-user onboarding via authenticated sso login.\n\nMist supports three methods of Org PSKs lookup: * local * radius * cloud"}, "orgs_rf_templates": {"tools": ["listOrgRfTemplates", "getOrgRfTemplate"], "description": "Rf Templates are a feature in Juniper Mist wireless assurance that allow for uniform radio configurations to be applied across all sites in an organization.\n\nThese templates can be customized to include model-specific exceptions and settings for different use cases.\n\nRF Templates enable the management of radio bands, channel width, transmission power, and ap antenna gain.\n\nThey provide a centralized way to configure and apply these settings to all access points within an organization."}, "orgs_security_policies": {"tools": ["listOrgSecPolicies", "getOrgSecPolicy"], "description": "Security Policy is designed to audit / catch discrepancies between\n\"what's intended to be running\" versus \"what's actually running\" in a network. \n\nMany big organizations have separated Security and IT team (for good reasons). Each site can be assigned a security policy.\n Whenever an AP is provisioned, the configuration will be checked against the security policy.\n Any violations will be flagged in [Device Config History]($e/Sites%20Devices/searchSiteDeviceConfigHistory) where you can search for the when and where the violation occurs."}, "orgs_services": {"tools": ["listOrgServices", "getOrgService"], "description": "A Service refers to the applications that network users will connect to. These applications represent traffic destinations and are essential for defining network policies and security configurations.\n\nApplications can be defined manually in the Juniper Mist cloud portal. They can be categorized as: * Custom Applications: Defined using IP prefixes, protocols, and port ranges. * Predefined Applications: Selected from a list of common applications (e.g., Social Media, Microsoft Teams). * URL Categories: Used to define applications based on specific URLs."}, "orgs_service_policies": {"tools": ["listOrgServicePolicies", "getOrgServicePolicy"], "description": "Services Policies are a security policy that defines who can access applications, they are used to control access to applications and ensure proper traffic management within a network.\n\nIt determines the source network or users that are allowed or denied access to specific applications or destinations.\n\nThe policy also includes options such as traffic steering profiles, which define the paths that the traffic should follow.\n\nService policies can be defined at the organization level or within a wan edge template or hub profile."}, "orgs_setting": {"tools": ["getOrgSettings"], "description": "API Calls to manage the Mist Organization Settings"}, "orgs_sitegroups": {"tools": ["listOrgSiteGroups", "getOrgSiteGroup"], "description": "Site groups are a group of sites under the same Org. It's many-to-many mapping to sites"}, "orgs_sites": {"tools": ["listOrgSites", "countOrgSites", "searchOrgSites"], "description": "API Calls to Create or Get the Organization Sites.\n\n\nUse the [Site Settings](https://www.juniper.net/documentation/us/en/software/mist/api/http/api/sites/setting/overview) to configure or update the Site information."}, "orgs_site_templates": {"tools": ["listOrgSiteTemplates", "getOrgSiteTemplate"], "description": "Site templates are pre-configured sets of attributes and settings that can be applied to one or more sites in a Mist Organization.\n\nThese templates allow for quick and consistent configuration of sites by grouping common attributes together.\n\nThey can include settings such as Auto-Upgrade features, wan edge configurations, switch configurations and other network parameters.\n\nBy applying a site template, the same configuration can be easily replicated across multiple sites, simplifying network management and ensuring consistency."}, "orgs_sles": {"tools": ["getOrgSitesSle", "getOrgSle"], "description": "Org SLEs, or Service-Level Expectations, are metrics used to monitor and report on the user experience of a Wireless, Wired or Wan network.\n\nThey are generated through data science and machine learning algorithms and provide insights into various aspects of the network, such as coverage, capacity, connectivity, and performance.\n\nMist SLEs help identify when users do not have sufficient network quality, when they face issues with connecting or roaming between access points, and when there are problems on the wired network."}, "orgs_wlan_templates": {"tools": ["listOrgTemplates", "getOrgTemplate"], "description": "A WLAN template is a collection of WLAN policies, Tunneling Policies, and WxLAN policies. \nIt is used for creating and managing WLAN configurations at an organizational level. \n\n\nWLAN templates allow for modular and scalable configuration by grouping together the settings for multiple SSIDs. \nThese templates can be applied to specific sites, site groups, or the entire organization, making it easier to manage and automate configuration across multiple locations. \n\n\nWLAN templates are especially useful for organizations with multiple sites or plans for future expansion."}, "orgs_user_macs": {"tools": ["searchOrgUserMacs", "getOrgUserMac"], "description": "NAC User MACs (Endpoints) provide a database of endpoints identified by their MAC addresses. They can be used assign each endpoint with various attributes, such as name, VLAN, role and client label. Once an endpoint is labeled, the label name can be used to create [NAC Tags]($h/Orgs%20NAC%20Tags/_overview) as match criteria.\n\n[NAC Tags]($h/Orgs%20NAC%20Tags/_overview) can be used to create Tags regrouping one or multiple endpoint MAC Addresses, but the use of the User MACs provides additional features:\n* possibility to assign specific attributes, like a Name, a Radius Group, a VLAN ID, ...\n* possibility to assign one or multiple Tags (Labels) to a User MAC\n* improved management for large list of MAC Addresses"}, "orgs_vpns": {"tools": ["listOrgVpns", "getOrgVpn"], "description": "VPNs endpoints are used to create the WAN Assurance Overlay configuration between a Hub and one\nor multiple WAN Edge Gateways.\n\n\nWhen configuring the Hub and Spokes from the Mist UI, the UI is automatically creating or updating\nthe VPNs objects based on the configuration. \nWhen the configuration is directly done with the APIs, the VPN object must be manually managed."}, "orgs_webhooks": {"tools": ["listOrgWebhooks", "getOrgWebhook", "countOrgWebhooksDeliveries", "searchOrgWebhooksDeliveries"], "description": "An Org Webhook is a configuration that allows real-time events and data from the Org to be pushed to a provided url.\n\nIt enables the collection of information about various topics such as device events, alarms, and audits updates at the org level.\n\nThe Webhook can be set up and customized using the Mist API, allowing users to receive and analyze specific data from a particular site."}, "orgs_wlans": {"tools": ["listOrgWlans", "getOrgWLAN"], "description": "An Org Wlan is a wireless local area network that is configured at the Org level and applied to a WLAN template.\n\nIt allows for the creation and management of wireless network settings, such as SSIDs (service set identifiers), authentication settings, VLAN configurations, etc...\n\nOrg WLANs are created and managed at the org level and can only be referenced and used within the WLAN Templates."}, "orgs_wxrules": {"tools": ["listOrgWxRules", "getOrgWxRule"], "description": "ORg WxRules are a set of rules, restrictions, and settings that can be applied to WLANs within a specific WLAN Template.\n\nThese policies determine how the devices and traffic are treated by the network and can be used to control access, define VLANs, and apply labels to users and resources."}, "orgs_wxtags": {"tools": ["listOrgWxTags", "getOrgApplicationList", "getOrgWxTag", "getOrgCurrentMatchingClientsOfAWxTag"], "description": "Wxtags are tags or groups that can be created and used within the Org.\n\nThey are used to classify users and resources and can be applied to Access Points, WLAN configurations or WxRules within that site.\n\nOrg WxTags are created and managed at the org level and can only be referenced and used within the org level configuration."}, "orgs_wxtunnels": {"tools": ["listOrgWxTunnels", "getOrgWxTunnel"], "description": "A WxLan Tunnel (WxTunnel) are used  to create a secure connection between Juniper Mist Access Points and third-party VPN concentrators using protocols such as L2TPv3 or dmvpn.\n\nThese tunnels allow for the aggregation of ethernet interfaces on access points, support dynamic or static tunnels, and provide options for IPSec encryption."}, "sites": {"tools": ["getSiteInfo"], "description": "A site represents a project, a deployment. For MSP, it can be as small as a coffee shop or a five-star 600-room hotel. A site contains a set of Maps, Wlans, Policies, Zones."}, "sites_alarms": {"tools": ["countSiteAlarms", "searchSiteAlarms"], "description": "Alarms are triggered based on certain events. Alarms could be configured using an [Orgs Alarm Template]($h/Orgs%20Alarm%20Templates/_overview)."}, "sites_ap_templates": {"tools": ["listSiteApTemplateDerived"], "description": "AP Templates are defining Wi-Fi and AP settings that can be assigned to Access Points based on different types of rules.\n\nSite AP Templates are created and managed at the site level and can only be referenced and used within that particular site."}, "sites_applications": {"tools": ["listSiteApps"], "description": "Applications contains a list of applications users are interested in monitoring / routing / policing"}, "sites_anomaly": {"tools": ["getSiteAnomalyEventsForClient", "getSiteAnomalyEventsForDevice", "listSiteAnomalyEvents"], "description": null}, "sites_clients___nac": {"tools": ["countSiteNacClients", "countSiteNacClientEvents", "searchSiteNacClientEvents", "searchSiteNacClients"], "description": "NAC Clients are devices connected to the network and authenticated by Juniper Mist Access Assurance."}, "sites_clients___wan": {"tools": ["countSiteWanClientEvents", "countSiteWanClients", "searchSiteWanClientEvents", "searchSiteWanClients"], "description": "WAN Clients are devices connected to a Juniper SRX or SSX gateway monitor or managed by Mist"}, "sites_clients___wired": {"tools": ["countSiteWiredClients", "searchSiteWiredClients"], "description": "Wired Clients are Wired devices connected to a Juniper switch monitored or managed by Mist."}, "sites_clients___wireless": {"tools": ["countSiteWirelessClients", "countSiteWirelessClientEvents", "searchSiteWirelessClientEvents", "searchSiteWirelessClients", "countSiteWirelessClientSessions", "searchSiteWirelessClientSessions", "getSiteEventsForClient"], "description": "Wireless Clients are Wi-Fi devices connected to a Juniper Mist Access Point."}, "sites_devices": {"tools": ["listSiteDevices", "countSiteDeviceConfigHistory", "searchSiteDeviceConfigHistory", "countSiteDevices", "countSiteDeviceEvents", "searchSiteDeviceEvents", "exportSiteDevices", "countSiteDeviceLastConfig", "searchSiteDeviceLastConfigs", "searchSiteDevices", "getSiteDevice"], "description": "Mist provides many ways (device_type specific template, site template, device profile, per-device) to configure devices for different kind of scenarios.\n\nThe precedence goes from most specific to least specific\n\nDevice > Device Profile > RFTemplate (for AP only) > DeviceType-specific Template > Site Template > Site Setting"}, "sites_devices___wireless": {"tools": ["listSiteDeviceRadioChannels", "getSiteDeviceIotPort"], "description": "API Calls specific to the Mist Access Points"}, "sites_devices___others": {"tools": ["listSiteOtherDevices", "countSiteOtherDeviceEvents", "searchSiteOtherDeviceEvents"], "description": "API Call for 3rd party devices"}, "sites_devices___wired": {"tools": [], "description": "API Calls specific to the Juniper Switches managed by Mist"}, "sites_devices___wired___virtual_chassis": {"tools": ["getSiteDeviceVirtualChassis"], "description": "API Calls specific to the Juniper Switches Virtual Chassis managed by Mist"}, "sites_devices___wan_cluster": {"tools": ["GetSiteDeviceHaClusterNode"], "description": "API Calls specific to manage (form/delete) the SRX/SSR Clusters"}, "sites_device_profiles": {"tools": ["listSiteDeviceProfilesDerived"], "description": "The API Endpoints for the Device Profiles at the site level can be used to get the site derived networks, meaning the merge between the site level configuration and the org level configuration."}, "orgs_events": {"tools": ["countOrgSystemEvents", "searchOrgSystemEvents"], "description": "Orgs Events are all the system level changes at the org level"}, "sites_events": {"tools": ["listSiteRoamingEvents", "countSiteSystemEvents", "searchSiteSystemEvents"], "description": "Site events are issues or incidents that affect site-assigned access points (aps) and radius, dhcp, and dns servers.\n\nThey can be investigated and monitored using the insights dashboard in the juniper mist portal. the dashboard provides a summary of site events, including information about the impacted devices and contributing events.\n\nSite events can be categorized as resolved or acknowledged, and additional details can be accessed by clicking on the event."}, "sites_evpn_topologies": {"tools": ["listSiteEvpnTopologies", "getSiteEvpnTopology"], "description": "EVPN allows an alternative but more efficient LAN architecture utilizing VxLAN / MP-BGP - separating control plane (MAC / IP Learning) from forwarding plane.\n\nIn our implementation, following the steps to deploy EVPN topologies in a Site"}, "sites_gateway_templates": {"tools": ["listSiteGatewayTemplateDerived"], "description": "The API Endpoints for the Gateway Templates at the site level can be used to get the site derived networks, meaning the merge between the site level configuration and the org level configuration."}, "sites_guests": {"tools": ["listSiteAllGuestAuthorizations", "countSiteGuestAuthorizations", "listSiteAllGuestAuthorizationsDerived", "searchSiteGuestAuthorization", "getSiteGuestAuthorization"], "description": "Guests are users who are accessing the wi-fi network as a temporary or non-permanent visitor."}, "sites_insights": {"tools": ["getSiteInsightMetricsForClient", "getSiteInsightMetricsForDevice", "getSiteInsightMetrics"], "description": "Insights is a feature that provides an overview of network experience across the entire site, access points, or clients.\n\nIt offers useful information about current conditions, such as telemetry data from wired switches, edge devices, wireless clients, access points, network applications, and bluetooth low energy (ble) tags.\n\nThese insights can be used to correct issues, make changes, and ensure a good network experience for users."}, "sites_maps": {"tools": ["listSiteMaps", "getSiteMap"], "description": "A Site Map is a visual representation of the layout and structure of a location, such as a building or campus.\n\nIt includes accurate information about the placement, positions, heights, and orientations of Juniper Mist Access Points (APs) and other devices in the deployment.\n\nThe floorplan is an essential component of location services as it enables the location engine to generate accurate location estimates for client devices, assets, and users at the site."}, "sites_maps___auto_placement": {"tools": ["getSiteApAutoOrientation", "getSiteApAutoPlacement"], "description": "### AP Auto-Placement\nAP Auto-Placement is a feature in Juniper Mist wireless assurance that automatically determines and sets the positions of Access Points (APs) on a floorplan.\n\nIt saves time and simplifies the deployment process by eliminating the need for manual placement. \n\nThe autoplacement algorithm calculates the most probable location for each AP based on factors such as signal strength and coverage requirements. \n\nThe confidence level of the autoplacement is indicated by colors, with green representing high certainty, orange indicating medium certainty, and red suggesting low certainty. \nIn cases where aps are isolated or cannot communicate with nearby aps, they cannot be placed automatically and must be [manually positioned on the floorplan]($e/Sites%20Devices/updateSiteDevice). \n\nAfter the autoplacement process is complete, the results can be evaluated and accepted of rejected with the API Call [Confirm Site AP Localization Data]($e/Sites%20Maps%20-%20Auto-placement/confirmSiteApLocalizationData)\n\n\n### AP Auto-Orientation\nAp Auto-Orientation is a feature in juniper mist wireless assurance that allows users to check and correct the orientation of Access Points (APs) on a floorplan. \n\nThis feature is supported by specific ap models and requires a firmware dependency of version 0.14.28310 or higher and does not require a maintenance window and can be used after performing autoplacement. \n\nTo use auto-orientation, physically install the APs, claim or adopt them into the Juniper Mist organization, place them on the floorplan, and perform auto-placement, then trigger the [Start Site Ap Auto Orientation API call]($e/Sites%20Maps%20-%20Auto-placement/startSiteApAutoOrientation)\n\nAfter 24 hours, the rotation in degrees of the AP(s) will be updated. users can accept or deny the changes made by the auto-orientation feature with the API Call [Confirm Site AP Localization Data]($e/Sites%20Maps%20-%20Auto-placement/confirmSiteApLocalizationData)."}, "sites_maps___auto_zone": {"tools": ["getSiteMapAutoZoneStatus"], "description": "The auto zones service is a map parsing service that uses map image data to suggest spaces to designate as location zones."}, "sites_mxedges": {"tools": ["listSiteMxEdges", "countSiteMxEdgeEvents", "searchSiteMistEdgeEvents", "getSiteMxEdge"], "description": "MxEdges (Mist Edges) at the site level are deployed to tunnel traffic at each site due to network constraints or security concerns.\n\nThey can be assigned to a specific site and configured to provide tunneling and radius proxy services for the access points (APs) in that site.\n\nThese Mist Edges allow for the extension of user vlans from the corporate network to the aps, and they support features such as auto preemption for failover, dual tunneling to different mist edge clusters, and anchor tunnels for traffic routing to dmz areas."}, "sites_network_templates": {"tools": ["listSiteNetworkTemplateDerived"], "description": "The API Endpoints for the Network Templates at the site level can be used to get the site derived networks, meaning the merge between the site level configuration and the org level configuration."}, "sites_networks": {"tools": ["listSiteNetworksDerived"], "description": "The API Endpoints for the Networks at the site level can be used to get the site derived networks, meaning the merge between the site level configuration and the org level configuration."}, "sites_psks": {"tools": ["listSitePsks", "getSitePsk"], "description": "A multi PSK (Pre-Shared Key) is a feature that allows the use of multiple PSKs for securing network connections.\n\nIt provides a simple and comprehensive way to onboard client devices without relying on client mac addresses.\n\nEach psk has its own key name, which can be used for user-level accountability, key rotation, and visibility in the management platform. It supports the creation, rotation, and auto-expiration of psks, and allows vlan assignment and role assignment for dynamic per-user policies.\n\nMulti PSKs create virtual broadcast domains and can be used for end-user onboarding via authenticated sso login.\n\nMist supports two methods of Site PSKs lookup: * local * radius"}, "sites_rf_templates": {"tools": ["listSiteRfTemplateDerived"], "description": "The API Endpoints for the RF Templates at the site level can be used to get the site derived configuration, meaning the merge between the site level configuration and the org level configuration."}, "sites_rfdiags": {"tools": ["getSiteSiteRfdiagRecording", "getSiteRfdiagRecording", "downloadSiteRfdiagRecording"], "description": "Rf Diags is a feature in Juniper Mist location services that allows users to replay recorded sessions of the RF (radio frequency) environment.\n\nIt enables users to gain an understanding of current issues, troubleshoot problems, and review recordings for further analysis or to share with customer support."}, "sites_rogues": {"tools": ["listSiteRogueAPs", "listSiteRogueClients", "countSiteRogueEvents", "searchSiteRogueEvents", "getSiteRogueAP"], "description": "Rogues are unauthorized wireless access points that are installed on a network without authorization.\n\nThey can be connected to the LAN via an ethernet cable, similar to a pc, and are typically set up by individuals with malicious intent or by employees trying to cover a dead spot with their own wi-fi hotspot."}, "sites_rrm": {"tools": ["getSiteCurrentChannelPlanning", "getSiteCurrentRrmConsiderations", "listSiteRrmEvents", "listSiteCurrentRrmNeighbors"], "description": "RRM, or Radio Resource Management, is a tool used by large multi-site organizations to efficiently manage their RF spectrum.\n\nIt involves making decisions on channel and power settings for access points (APs) based on factors such as user experience, client count, client usage, and interference.\n\nMist RRM uses a reinforcement learning-based feedback model to monitor the impact of changes in channel and power settings on the capacity and performance of the wireless network. It adapts dynamically to changing conditions throughout the day and aims to optimize wireless coverage and capacity across a site."}, "sites_services": {"tools": ["listSiteServicesDerived", "countSiteServicePathEvents", "searchSiteServicePathEvents"], "description": "A Service represents an a traffic destination or an application that network users connect to. They are associated with users and networks and are used in application policies to permit or deny access.\n\nServices are defined at the [Org level]($e/Orgs%20Services/createOrgService).\n\nThe Site level endpoints can be used to get the site services statistics or the derived services, meaning the merge between the site level configuration and the org level configuration."}, "sites_service_policies": {"tools": ["listSiteServicePoliciesDerived"], "description": "The API Endpoints for the Service Policies at the site level can be used to get the site derived configuration, meaning the merge between the site level configuration and the org level configuration."}, "sites_setting": {"tools": ["getSiteSetting", "getSiteSettingDerived"], "description": "Site settings refer to the configuration and management of of site within a Mist Organization.\n\nThese settings include access point settings, firmware upgrade schedules, and various features such as location services, occupancy analytics, and engagement analytics."}, "sites_site_templates": {"tools": ["listSiteSiteTemplateDerived"], "description": "The API Endpoints for the Site Templates at the site level can be used to get the site derived configuration, meaning the merge between the site level configuration and the org level configuration."}, "sites_skyatp": {"tools": ["countSiteSkyatpEvents", "searchSiteSkyatpEvents"], "description": "SkyATP is a cloud-based solution that provides advanced threat protection for network security.\n\nIt allows security analysts to update their defense against new attack techniques in real-time and distribute threat intelligence quickly.\n\nSkyATP inspects network traffic and blocks devices that have downloaded malware or accessed command and control servers. It also offers configuration and troubleshooting capabilities for administrators."}, "sites_sles": {"tools": ["getSiteSleClassifierDetails", "listSiteSleMetricClassifiers", "getSiteSleHistogram", "getSiteSleImpactSummary", "listSiteSleImpactedApplications", "listSiteSleImpactedAps", "listSiteSleImpactedChassis", "listSiteSleImpactedWiredClients", "listSiteSleImpactedGateways", "listSiteSleImpactedInterfaces", "listSiteSleImpactedSwitches", "listSiteSleImpactedWirelessClients", "getSiteSleSummary", "getSiteSleThreshold", "listSiteSlesMetrics"], "description": "Site SLEs, or Service-Level Expectations, are metrics used to monitor and report on the user experience of a Wireless, Wired or Wan network.\n\nThey are generated through data science and machine learning algorithms and provide insights into various aspects of the network, such as coverage, capacity, connectivity, and performance.\n\nMist SLEs help identify when users do not have sufficient network quality, when they face issues with connecting or roaming between access points, and when there are problems on the wired network."}, "sites_synthetic_tests": {"tools": ["getSiteDeviceSyntheticTest", "searchSiteSyntheticTest"], "description": null}, "sites_vpns": {"tools": ["listSiteVpnsDerived"], "description": "API Calls to retrieve the list of Org VPNs configuration available for the Site"}, "sites_wan_usages": {"tools": ["countSiteWanUsage", "searchSiteWanUsage"], "description": "API Calls to retrieve WAN Assurance statistics about the WAN Usage"}, "sites_webhooks": {"tools": ["listSiteWebhooks", "getSiteWebhook", "countSiteWebhooksDeliveries", "searchSiteWebhooksDeliveries"], "description": "A Site Webhook is a configuration that allows real-time events and data from a specific site to be pushed to a provided url.\n\nIt enables the collection of information about various topics such as device events, alarms, audits, client sessions and location updates at the site level.\n\nThe Webhook can be set up and customized using the Mist API, allowing users to receive and analyze specific data from a particular site."}, "sites_wlans": {"tools": ["listSiteWlans", "listSiteWlanDerived", "getSiteWlan"], "description": "A Site Wlan is a wireless local area network that is configured and applied to a specific site within an organization.\n\nIt allows for the creation and management of wireless network settings, such as SSIDs (service set identifiers), authentication settings, VLAN configurations, etc... for a particular site.\n\nSite Wlans are created and managed at the site level and can only be referenced and used within that particular site."}, "sites_wxrules": {"tools": ["listSiteWxRules", "ListSiteWxRulesDerived", "getSiteWxRule"], "description": "Site WxRules are a set of rules, restrictions, and settings that can be applied to WLANs within a specific site.\n\nThese policies determine how the devices and traffic are treated by the network and can be used to control access, define VLANs, and apply labels to users and resources.\n\nSite WxRules are created and managed at the site level and are applied after the site-level WxRules."}, "sites_wxtags": {"tools": ["listSiteWxTags", "getSiteApplicationList", "getSiteWxTag"], "description": "Wxtags are tags or groups that can be created and used within a specific site.\n\nThey are used to classify users and resources and can be applied to Access Points, WLAN configurations or WxRules within that site.\n\nSite WxTags are created and managed at the site level and can only be referenced and used within that particular site."}, "sites_wxtunnels": {"tools": ["listSiteWxTunnels", "getSiteWxTunnel"], "description": "A WxLan Tunnel (WxTunnel) are used  to create a secure connection between Juniper Mist Access Points and third-party VPN concentrators using protocols such as L2TPv3 or dmvpn.\n\nThese tunnels allow for the aggregation of ethernet interfaces on access points, support dynamic or static tunnels, and provide options for IPSec encryption."}, "sites_stats": {"tools": ["getSiteStats"], "description": "The stats are providing access to raw data about a specific type of entities."}, "sites_stats___apps": {"tools": ["countSiteApps"], "description": "API Calls to retrieve the stats of the Applications used on side"}, "sites_stats___bgp_peers": {"tools": ["countSiteBgpStats", "searchSiteBgpStats"], "description": "API Calls to retrieve BGP Peers statistics of the Site Wen Edge Gateways at the Site level"}, "sites_stats___calls": {"tools": ["troubleshootSiteCall", "countSiteCalls", "searchSiteCalls", "getSiteCallsSummary", "listSiteTroubleshootCalls"], "description": "API Calls to retrieve the stats of the calls (Zoom/Teams) detected by Mist"}, "sites_stats___clients_wireless": {"tools": ["listSiteWirelessClientsStats", "getSiteWirelessClientStats", "getSiteWirelessClientsStatsByMap", "listSiteUnconnectedClientStats"], "description": "API Calls to retrieve the stats of the wireless clients detected (connected or not connected) on this site."}, "sites_stats___devices": {"tools": ["listSiteDevicesStats", "getSiteDeviceStats", "getSiteAllClientsStatsByDevice", "getSiteGatewayMetrics", "getSiteSwitchesMetrics"], "description": "API Calls to retrieve statistics about the Mist Managed and Monitored Devices at the Site level"}, "sites_stats___mxedges": {"tools": ["listSiteMxEdgesStats", "getSiteMxEdgeStats"], "description": "API Calls to retrieve statistics about the Mist Edges at the Site level"}, "sites_stats___ports": {"tools": ["countSiteSwOrGwPorts", "searchSiteSwOrGwPorts"], "description": "API Calls to retrieve statistics about the Wired Ports at the Site level"}, "sites_stats___wxrules": {"tools": ["getSiteWxRulesUsage"], "description": "API Calls to retrieve WxRules statistics for the current Site"}, "sites_stats___discovered_switches": {"tools": ["searchSiteDiscoveredSwitchesMetrics", "countSiteDiscoveredSwitches", "listSiteDiscoveredSwitchesMetrics", "searchSiteDiscoveredSwitches"], "description": "API Calls to retrieve statistics about the Discovered Switches at the Site level"}, "constants_definitions": {"tools": ["listAlarmDefinitions", "listApChannels", "listApLEslVersions", "listApLedDefinition", "listAppCategoryDefinitions", "listAppSubCategoryDefinitions", "listApplications", "listCountryCodes", "listFingerprintTypes", "listGatewayApplications", "listInsightMetrics", "listSiteLanguages", "listLicenseTypes", "listMarvisClientVersions", "listStates", "listTrafficTypes", "listWebhookTopics"], "description": "API Calls to retrieve constant values that can be used in different parts of the configuration"}, "constants_events": {"tools": ["listClientEventsDefinitions", "listDeviceEventsDefinitions", "listMxEdgeEventsDefinitions", "listNacEventsDefinitions", "listOtherDeviceEventsDefinitions", "listSystemEventsDefinitions"], "description": "API Calls to retrieve the definitions of the Mist events. These definitions are providing example of the Webhook payloads"}, "constants_models": {"tools": ["getGatewayDefaultConfig", "listDeviceModels", "listMxEdgeModels", "listSupportedOtherDeviceModels"], "description": "API Calls to retrieve the list of Hardware Models and their features"}, "self_account": {"tools": ["getSelf", "getSelfLoginFailures", "verifySelfEmail", "getSelfApiUsage"], "description": "API calls related to the currently connected user account."}, "self_alarms": {"tools": ["listAlarmSubscriptions"], "description": "API calls related to the alarm subscriptions for the currently connected user account."}, "self_audit_logs": {"tools": ["listSelfAuditLogs"], "description": "API calls related to the audit logs subscriptions for the currently connected user account."}}