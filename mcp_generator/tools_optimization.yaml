getOrgConfigurationObjects:
  type: tool_consolidation
  tags: [configuration]
  description: Retrieve configuration objects from a specified organization or site.
  read_only_hint: true
  destructive_hint: false
  parameters:
    - name: org_id
      schema:
        type: string
        format: uuid
      description: ID of the organization or site to retrieve configuration objects from.
      required: true
    - name: object_type
      schema:
        type: string
      description: Type of configuration object to retrieve.
      required: true
    - name: object_id
      schema:
        type: string
        format: uuid
      description: ID of the specific configuration object to retrieve. Optional, if not provided all objects of the specified type will be returned.
  requests:
    alarmtemplates:
      list:
        operationId: listOrgAlarmTemplates
        function: mistapi.api.v1.orgs.alarmtemplates.listOrgAlarmTemplates(apisession, org_id=str(org_id))
      get:
        operationId: getOrgAlarmTemplate
        function: mistapi.api.v1.orgs.alarmtemplates.getOrgAlarmTemplate(apisession, org_id=str(org_id), alarmtemplate_id=str(object_id))

    wlans:
      list:
        operationId: listOrgWlans
        function: mistapi.api.v1.orgs.wlans.listOrgWlans(apisession, org_id=str(org_id))
      get:
        operationId: getOrgWlan
        function: mistapi.api.v1.orgs.wlans.getOrgWLAN(apisession, org_id=str(org_id), wlan_id=str(object_id))


    sitegroups:
      list:
        operationId: listOrgSiteGroups
        function: mistapi.api.v1.orgs.sitegroups.listOrgSiteGroups(apisession, org_id=str(org_id))
      get:
        operationId: getOrgSiteGroup
        function: mistapi.api.v1.orgs.sitegroups.getOrgSiteGroup(apisession, org_id=str(org_id), sitegroup_id=str(object_id))

    aptemplates:
      list:
        operationId: listOrgAptemplates
        function: mistapi.api.v1.orgs.aptemplates.listOrgAptemplates(apisession, org_id=str(org_id))
      get:
        operationId: getOrgAptemplate
        function:
          mistapi.api.v1.orgs.aptemplates.getOrgAptemplate(apisession, org_id=str(org_id), aptemplate_id=str(object_id))


    avprofiles:
      list:
        operationId: listOrgAntivirusProfiles
        function: mistapi.api.v1.orgs.avprofiles.listOrgAntivirusProfiles(apisession, org_id=str(org_id))
      get:
        operationId: getOrgAntivirusProfile
        function: mistapi.api.v1.orgs.avprofiles.getOrgAntivirusProfile(apisession, org_id=str(org_id), avprofile_id=str(object_id))


    devices:
      list:
        operationId: listOrgDevices
        function: mistapi.api.v1.orgs.devices.listOrgDevices(apisession, org_id=str(org_id))

    deviceprofiles:
      list:
        operationId: listOrgDeviceProfiles
        function: mistapi.api.v1.orgs.deviceprofiles.listOrgDeviceProfiles(apisession, org_id=str(org_id))
      get:
        operationId: getOrgDeviceProfile
        function: mistapi.api.v1.orgs.deviceprofiles.getOrgDeviceProfile(apisession, org_id=str(org_id), deviceprofile_id=str(object_id))


    evpn_topologies:
      list:
        operationId: listOrgEvpnTopologies
        function: mistapi.api.v1.orgs.evpn_topologies.listOrgEvpnTopologies(apisession, org_id=str(org_id))
      get:
        operationId: getOrgEvpnTopology
        function: mistapi.api.v1.orgs.evpn_topologies.getOrgEvpnTopology(apisession, org_id=str(org_id), evpn_topology_id=str(object_id))


    gatewaytemplates:
      list:
        operationId: listOrgGatewayTemplates
        function: mistapi.api.v1.orgs.gatewaytemplates.listOrgGatewayTemplates(apisession, org_id=str(org_id))
      get:
        operationId: getOrgGatewayTemplate
        function: mistapi.api.v1.orgs.gatewaytemplates.getOrgGatewayTemplate(apisession, org_id=str(org_id), gatewaytemplate_id=str(object_id))


    idpprofiles:
      list:
        operationId: listOrgIdpProfiles
        function: mistapi.api.v1.orgs.idpprofiles.listOrgIdpProfiles(apisession, org_id=str(org_id))
      get:
        operationId: getOrgIdpProfile
        function: mistapi.api.v1.orgs.idpprofiles.getOrgIdpProfile(apisession, org_id=str(org_id), idpprofile_id=str(object_id))


    aamwprofiles:
      list:
        operationId: listOrgAAMWProfiles
        function: mistapi.api.v1.orgs.aamwprofiles.listOrgAAMWProfiles(apisession, org_id=str(org_id))
      get:
        operationId: getOrgAAMWProfile
        function: mistapi.api.v1.orgs.aamwprofiles.getOrgAAMWProfile(apisession, org_id=str(org_id), aamwprofile_id=str(object_id))


    mxclusters:
      list:
        operationId: listOrgMxEdgeClusters
        function: mistapi.api.v1.orgs.mxclusters.listOrgMxEdgeClusters(apisession, org_id=str(org_id))
      get:
        operationId: getOrgMxEdgeCluster
        function: mistapi.api.v1.orgs.mxclusters.getOrgMxEdgeCluster(apisession, org_id=str(org_id), mxcluster_id=str(object_id))


    mxedges:
      list:
        operationId: listOrgMxEdges
        function: mistapi.api.v1.orgs.mxedges.listOrgMxEdges(apisession, org_id=str(org_id))
      get:
        operationId: getOrgMxEdge
        function: mistapi.api.v1.orgs.mxedges.getOrgMxEdge(apisession, org_id=str(org_id), mxedge_id=str(object_id))


    mxtunnels:
      list:
        operationId: listOrgMxTunnels
        function: mistapi.api.v1.orgs.mxtunnels.listOrgMxTunnels(apisession, org_id=str(org_id))
      get:
        operationId: getOrgMxTunnel
        function: mistapi.api.v1.orgs.mxtunnels.getOrgMxTunnel(apisession, org_id=str(org_id), mxtunnel_id=str(object_id))


    nactags:
      list:
        operationId: listOrgNacTags
        function: mistapi.api.v1.orgs.nactags.listOrgNacTags(apisession, org_id=str(org_id))
      get:
        operationId: getOrgNacTag
        function: mistapi.api.v1.orgs.nactags.getOrgNacTag(apisession, org_id=str(org_id), nactag_id=str(object_id))


    nacrules:
      list:
        operationId: listOrgNacRules
        function: mistapi.api.v1.orgs.nacrules.listOrgNacRules(apisession, org_id=str(org_id))
      get:
        operationId: getOrgNacRule
        function: mistapi.api.v1.orgs.nacrules.getOrgNacRule(apisession, org_id=str(org_id), nacrule_id=str(object_id))


    networktemplates:
      list:
        operationId: listOrgNetworkTemplates
        function: mistapi.api.v1.orgs.networktemplates.listOrgNetworkTemplates(apisession, org_id=str(org_id))
      get:
        operationId: getOrgNetworkTemplate
        function: mistapi.api.v1.orgs.networktemplates.getOrgNetworkTemplate(apisession, org_id=str(org_id), networktemplate_id=str(object_id))


    networks:
      list:
        operationId: listOrgNetworks
        function: mistapi.api.v1.orgs.networks.listOrgNetworks(apisession, org_id=str(org_id))
      get:
        operationId: getOrgNetwork
        function: mistapi.api.v1.orgs.networks.getOrgNetwork(apisession, org_id=str(org_id), network_id=str(object_id))


    psks:
      list:
        operationId: listOrgPsks
        function: mistapi.api.v1.orgs.psks.listOrgPsks(apisession, org_id=str(org_id))
      get:
        operationId: getOrgPsk
        function: mistapi.api.v1.orgs.psks.getOrgPsk(apisession, org_id=str(org_id), psk_id=str(object_id))


    rftemplates:
      list:
        operationId: listOrgRfTemplates
        function: mistapi.api.v1.orgs.rftemplates.listOrgRfTemplates(apisession, org_id=str(org_id))
      get:
        operationId: getOrgRfTemplate
        function: mistapi.api.v1.orgs.rftemplates.getOrgRfTemplate(apisession, org_id=str(org_id), rftemplate_id=str(object_id))


    secpolicies:
      list:
        operationId: listOrgSecPolicies
        function: mistapi.api.v1.orgs.secpolicies.listOrgSecPolicies(apisession, org_id=str(org_id))
      get:
        operationId: getOrgSecPolicy
        function: mistapi.api.v1.orgs.secpolicies.getOrgSecPolicy(apisession, org_id=str(org_id), secpolicy_id=str(object_id))


    services:
      list:
        operationId: listOrgServices
        function: mistapi.api.v1.orgs.services.listOrgServices(apisession, org_id=str(org_id))
      get:
        operationId: getOrgService
        function: mistapi.api.v1.orgs.services.getOrgService(apisession, org_id=str(org_id), service_id=str(object_id))


    servicepolicies:
      list:
        operationId: listOrgServicePolicies
        function: mistapi.api.v1.orgs.servicepolicies.listOrgServicePolicies(apisession, org_id=str(org_id))
      get:
        operationId: getOrgServicePolicy
        function: mistapi.api.v1.orgs.servicepolicies.getOrgServicePolicy(apisession, org_id=str(org_id), servicepolicy_id=str(object_id))


    sites:
      list:
        operationId: listOrgSites
        function: mistapi.api.v1.orgs.sites.listOrgSites(apisession, org_id=str(org_id))

    sitetemplates:
      list:
        operationId: listOrgSiteTemplates
        function: mistapi.api.v1.orgs.sitetemplates.listOrgSiteTemplates(apisession, org_id=str(org_id))
      get:
        operationId: getOrgSiteTemplate
        function: mistapi.api.v1.orgs.sitetemplates.getOrgSiteTemplate(apisession, org_id=str(org_id), sitetemplate_id=str(object_id))


    templates:
      list:
        operationId: listOrgTemplates
        function: mistapi.api.v1.orgs.templates.listOrgTemplates(apisession, org_id=str(org_id))
      get:
        operationId: getOrgTemplate
        function: mistapi.api.v1.orgs.templates.getOrgTemplate(apisession, org_id=str(org_id), template_id=str(object_id))


    vpns:
      list:
        operationId: listOrgVpns
        function: mistapi.api.v1.orgs.vpns.listOrgVpns(apisession, org_id=str(org_id))
      get:
        operationId: getOrgVpn
        function: mistapi.api.v1.orgs.vpns.getOrgVpn(apisession, org_id=str(org_id), vpn_id=str(object_id))


    webhooks:
      list:
        operationId: listOrgWebhooks
        function: mistapi.api.v1.orgs.webhooks.listOrgWebhooks(apisession, org_id=str(org_id))
      get:
        operationId: getOrgWebhook
        function: mistapi.api.v1.orgs.webhooks.getOrgWebhook(apisession, org_id=str(org_id), webhook_id=str(object_id))


    wxrules:
      list:
        operationId: listOrgWxRules
        function: mistapi.api.v1.orgs.wxrules.listOrgWxRules(apisession, org_id=str(org_id))
      get:
        operationId: getOrgWxRule
        function: mistapi.api.v1.orgs.wxrules.getOrgWxRule(apisession, org_id=str(org_id), wxrule_id=str(object_id))


    wxtags:
      list:
        operationId: listOrgWxTags
        function: mistapi.api.v1.orgs.wxtags.listOrgWxTags(apisession, org_id=str(org_id))
      get:
        operationId: getOrgWxTag
        function: mistapi.api.v1.orgs.wxtags.getOrgWxTag(apisession, org_id=str(org_id), wxtag_id=str(object_id))


getSiteConfigurationObjects:
  type: tool_consolidation
  tags: [configuration]
  description: Retrieve configuration objects from a specified site. The "_derived" tools are used to retrieve derived configuration objects that are generated from the org level objects with jinja2 variables resolved with the site variables.
  read_only_hint: true
  destructive_hint: false
  parameters:
    - name: site_id
      schema:
        type: string
        format: uuid
      description: ID of the site to retrieve configuration objects from.
      required: true
    - name: object_type
      schema:
        type: string
      description: Type of configuration object to retrieve.
      required: true
    - name: object_id
      schema:
        type: string
        format: uuid
      description: ID of the specific configuration object to retrieve. Optional, if not provided all objects of the specified type will be returned.
  requests:
    devices:
      list:
        operationId: listSiteDevices
        function: mistapi.api.v1.sites.devices.listSiteDevices(apisession, site_id=str(site_id))
      get:
        operationId: getSiteDevice
        function: mistapi.api.v1.sites.devices.getSiteDevice(apisession, site_id=str(site_id), device_id=str(object_id))


    evpn_topologies:
      list:
        operationId: listSiteEvpnTopologies
        function: mistapi.api.v1.sites.evpn_topologies.listSiteEvpnTopologies(apisession, site_id=str(site_id))
      get:
        operationId: getSiteEvpnTopology
        function: mistapi.api.v1.sites.evpn_topologies.getSiteEvpnTopology(apisession, site_id=str(site_id), evpn_topology_id=str(object_id))


    maps:
      list:
        operationId: listSiteMaps
        function: mistapi.api.v1.sites.maps.listSiteMaps(apisession, site_id=str(site_id))
      get:
        operationId: getSiteMap
        function: mistapi.api.v1.sites.maps.getSiteMap(apisession, site_id=str(site_id), map_id=str(object_id))


    mxedges:
      list:
        operationId: listSiteMxEdges
        function: mistapi.api.v1.sites.mxedges.listSiteMxEdges(apisession, site_id=str(site_id))
      get:
        operationId: getSiteMxEdge
        function: mistapi.api.v1.sites.mxedges.getSiteMxEdge(apisession, site_id=str(site_id), mxedge_id=str(object_id))


    psks:
      list:
        operationId: listSitePsks
        function: mistapi.api.v1.sites.psks.listSitePsks(apisession, site_id=str(site_id))
      get:
        operationId: getSitePsk
        function: mistapi.api.v1.sites.psks.getSitePsk(apisession, site_id=str(site_id), psk_id=str(object_id))


    webhooks:
      list:
        operationId: listSiteWebhooks
        function: mistapi.api.v1.sites.webhooks.listSiteWebhooks(apisession, site_id=str(site_id))
      get:
        operationId: getSiteWebhook
        function: mistapi.api.v1.sites.webhooks.getSiteWebhook(apisession, site_id=str(site_id), webhook_id=str(object_id))


    wlans:
      list:
        operationId: listSiteWlans
        function: mistapi.api.v1.sites.wlans.listSiteWlans(apisession, site_id=str(site_id))
      get:
        operationId: getSiteWlan
        function: mistapi.api.v1.sites.wlans.getSiteWlan(apisession, site_id=str(site_id), wlan_id=str(object_id))


    wxrules:
      list:
        operationId: listSiteWxRules
        function: mistapi.api.v1.sites.wxrules.listSiteWxRules(apisession, site_id=str(site_id))
      get:
        operationId: getSiteWxRule
        function: mistapi.api.v1.sites.wxrules.getSiteWxRule(apisession, site_id=str(site_id), wxrule_id=str(object_id))


    wxtags:
      list:
        operationId: listSiteWxTags
        function: mistapi.api.v1.sites.wxtags.listSiteWxTags(apisession, site_id=str(site_id))
      get:
        operationId: getSiteWxTag
        function: mistapi.api.v1.sites.wxtags.getSiteWxTag(apisession, site_id=str(site_id), wxtag_id=str(object_id))


    rftemplates_derived:
      list:
        operationId: listSiteRfTemplateDerived
        function: mistapi.api.v1.sites.rftemplates.listSiteRfTemplateDerived(apisession, site_id=str(site_id))

    wlans_derived:
      list:
        operationId: listSiteWlanDerived
        function: mistapi.api.v1.sites.wlans.listSiteWlanDerived(apisession, site_id=str(site_id))

    wxrules_derived:
      list:
        operationId: ListSiteWxRulesDerived
        function: mistapi.api.v1.sites.wxrules.ListSiteWxRulesDerived(apisession, site_id=str(site_id))

    # avprofiles_derived:
    #   list:
    #     operationId: listSiteAntivirusProfilesDerived
    #     function: mistapi.api.v1.sites.avprofiles.listSiteAntivirusProfilesDerived(apisession, site_id=str(site_id))

    # idpprofiles_derived:
    #   list:
    #     operationId: listSiteIdpProfilesDerived
    #     function: mistapi.api.v1.sites.idpprofiles.listSiteIdpProfilesDerived(apisession, site_id=str(site_id))

    # aamwprofiles_derived:
    #   list:
    #     operationId: listSiteAAMWProfilesDerived
    #     function: mistapi.api.v1.sites.aamwprofiles.listSiteAAMWProfilesDerived(apisession, site_id=str(site_id))

    aptemplates_derived:
      list:
        operationId: listSiteApTemplateDerived
        function: mistapi.api.v1.sites.networktemplates.listSiteApTemplateDerived(apisession, site_id=str(site_id))
    networktemplates_derived:
      list:
        operationId: listSiteNetworkTemplateDerived
        function: mistapi.api.v1.sites.networktemplates.listSiteNetworkTemplateDerived(apisession, site_id=str(site_id))

    gatewaytemplates_derived:
      list:
        operationId: listSiteGatewayTemplateDerived
        function: mistapi.api.v1.sites.gatewaytemplates.listSiteGatewayTemplateDerived(apisession, site_id=str(site_id))

    deviceprofiles_derived:
      list:
        operationId: listSiteDeviceProfilesDerived
        function: mistapi.api.v1.sites.deviceprofiles.listSiteDeviceProfilesDerived(apisession, site_id=str(site_id))

    networks_derived:
      list:
        operationId: listSiteNetworksDerived
        function: mistapi.api.v1.sites.networks.listSiteNetworksDerived(apisession, site_id=str(site_id))

    services_derived:
      list:
        operationId: listSiteServicesDerived
        function: mistapi.api.v1.sites.services.listSiteServicesDerived(apisession, site_id=str(site_id))

    servicepolicies_derived:
      list:
        operationId: listSiteServicePoliciesDerived
        function: mistapi.api.v1.sites.servicepolicies.listSiteServicePoliciesDerived(apisession, site_id=str(site_id))

    vpns_derived:
      list:
        operationId: listSiteVpnsDerived
        function: mistapi.api.v1.sites.vpns.listSiteVpnsDerived(apisession, site_id=str(site_id))
