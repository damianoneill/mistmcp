listOrgAptemplates:
  add_parameter:
    name: aptemplate_id
    type: string
    format: uuid
    description:
      ID of the AP Template to filter by. Providing this parameter will
      return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.orgs.aptemplates.getOrgAptemplate(apisession, org_id=str(org_id),
    aptemplate_id=str(aptemplate_id))
getOrgAptemplate:
  skip: true

listOrgAntivirusProfiles:
  add_parameter:
    name: avprofile_id
    type: string
    format: uuid
    description:
      ID of the Antivirus Profile to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.orgs.avprofiles.getOrgAntivirusProfile(apisession,
    org_id=str(org_id), avprofile=str(avprofile_id))
getOrgAntivirusProfile:
  skip: true

listOrgDeviceProfiles:
  add_parameter:
    name: deviceprofile_id
    type: string
    format: uuid
    description: ID of the Device Profile to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.orgs.deviceprofiles.getOrgDeviceProfile(apisession,
    org_id=str(org_id), deviceprofile_id=str(deviceprofile_id))
getOrgDeviceProfile:
  skip: true

listOrgEvpnTopologies:
  add_parameter:
    name: evpn_topology_id
    type: string
    format: uuid
    description: ID of the EVPN Topology to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.orgs.evpn_topologies.getOrgEvpnTopology(apisession,
    org_id=str(org_id), evpn_topology_id=str(evpn_topology_id))
getOrgEvpnTopology:
  skip: true
listOrgGatewayTemplates:
  add_parameter:
    name: gatewaytemplate_id
    type: string
    format: uuid
    description:
      ID of the Gateway Template to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.orgs.gatewaytemplates.getOrgGatewayTemplate(apisession,
    org_id=str(org_id), gatewaytemplate_id=str(gatewaytemplate_id))
getOrgGatewayTemplate:
  skip: true

listOrgIdpProfiles:
  add_parameter:
    name: idpprofile_id
    type: string
    format: uuid
    description:
      ID of the IDP Profile to filter by. Providing this parameter will
      return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.idpprofiles.getOrgIdpProfile(apisession,
    org_id=str(org_id), idpprofile_id=str(idpprofile_id))
getOrgIdpProfile:
  skip: true

listOrgAAMWProfiles:
  add_parameter:
    name: aamwprofile_id
    type: string
    format: uuid
    description:
      ID of the AAMW Profile to filter by. Providing this parameter will
      return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.aamwprofiles.getOrgAAMWProfile(apisession,
    org_id=str(org_id), aamwprofile_id=str(aamwprofile_id))
getOrgAAMWProfile:
  skip: true

listOrgMxEdgeClusters:
  add_parameter:
    name: mxcluster_id
    type: string
    format: uuid
    description:
      ID of the MX Edge Cluster to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.mxclusters.getOrgMxEdgeCluster(apisession,
    org_id=str(org_id), mxcluster_id=str(mxcluster_id))
getOrgMxEdgeCluster:
  skip: true

listOrgMxEdges:
  add_parameter:
    name: mxedge_id
    type: string
    format: uuid
    description:
      ID of the MX Edge to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.mxedges.getOrgMxEdge(apisession,
    org_id=str(org_id), mxedge_id=str(mxedge_id))
getOrgMxEdge:
  skip: true

listOrgMxTunnels:
  add_parameter:
    name: mxtunnel_id
    type: string
    format: uuid
    description: ID of the MX Tunnel to filter by. Providing this parameter will
      return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.mxtunnels.getOrgMxTunnel(apisession,
    org_id=str(org_id), mxtunnel_id=str(mxtunnel_id))
getOrgMxTunnel:
  skip: true

listOrgNacTags:
  add_parameter:
    name: nactag_id
    type: string
    format: uuid
    description:
      ID of the NAC Tag to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.nactags.getOrgNacTag(apisession,
    org_id=str(org_id), nactag_id=str(nactag_id))
getOrgNacTag:
  skip: true

listOrgMxEdgesStats:
  add_parameter:
    name: mxedge_id
    type: string
    format: uuid
    description:
      ID of the MX Edge to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.stats.getOrgMxEdgeStats(apisession,
    org_id=str(org_id), mxedge_id=str(mxedge_id))
getOrgMxEdgeStats:
  skip: true

listOrgNacRules:
  add_parameter:
    name: nacrule_id
    type: string
    format: uuid
    description: ID of the NAC Rule to filter by. Providing this parameter will
      return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.nacrules.getOrgNacRule(apisession,
    org_id=str(org_id), nacrule_id=str(nacrule_id))
getOrgNacRule:
  skip: true

listOrgNetworkTemplates:
  add_parameter:
    name: networktemplate_id
    type: string
    format: uuid
    description:
      ID of the Network Template to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.orgs.networktemplates.getOrgNetworkTemplate(apisession,
    org_id=str(org_id), networktemplate_id=str(networktemplate_id))
getOrgNetworkTemplate:
  skip: true

listOrgNetworks:
  add_parameter:
    name: network_id
    type: string
    format: uuid
    description:
      ID of the Network to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.networks.getOrgNetwork(apisession,
    org_id=str(org_id), network_id=str(network_id))
getOrgNetwork:
  skip: true

listOrgPsks:
  add_parameter:
    name: psk_id
    type: string
    format: uuid
    description:
      ID of the PSK to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.psks.getOrgPsk(apisession,
    org_id=str(org_id), psk_id=str(psk_id))
getOrgPsk:
  skip: true

listOrgRfTemplates:
  add_parameter:
    name: rftemplate_id
    type: string
    format: uuid
    description:
      ID of the RF Template to filter by. Providing this parameter will
      return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.rftemplates.getOrgRfTemplate(apisession,
    org_id=str(org_id), rftemplate_id=str(rftemplate_id))
getOrgRfTemplate:
  skip: true

listOrgSecPolicies:
  add_parameter:
    name: secpolicy_id
    type: string
    format: uuid
    description:
      ID of the Security Policy to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.secpolicies.getOrgSecPolicy(apisession,
    org_id=str(org_id), secpolicy_id=str(secpolicy_id))
getOrgSecPolicy:
  skip: true

listOrgServices:
  add_parameter:
    name: service_id
    type: string
    format: uuid
    description:
      ID of the Service to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.services.getOrgService(apisession,
    org_id=str(org_id), service_id=str(service_id))
getOrgService:
  skip: true

listOrgServicePolicies:
  add_parameter:
    name: servicepolicy_id
    type: string
    format: uuid
    description: ID of the Service Policy to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.orgs.servicepolicies.getOrgServicePolicy(apisession,
    org_id=str(org_id), servicepolicy_id=str(servicepolicy_id))
getOrgServicePolicy:
  skip: true

listOrgSites:
  skip: true

listOrgSiteTemplates:
  add_parameter:
    name: sitetemplate_id
    type: string
    format: uuid
    description: ID of the Site Template to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.orgs.sitetemplates.getOrgSiteTemplate(apisession,
    org_id=str(org_id), sitetemplate_id=str(sitetemplate_id))
getOrgSiteTemplate:
  skip: true

listOrgTemplates:
  add_parameter:
    name: template_id
    type: string
    format: uuid
    description: ID of the Template to filter by. Providing this parameter will
      return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.templates.getOrgTemplate(apisession,
    org_id=str(org_id), template_id=str(template_id))
getOrgTemplate:
  skip: true

listOrgVpns:
  add_parameter:
    name: vpn_id
    type: string
    format: uuid
    description:
      ID of the VPN to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.vpns.getOrgVpn(apisession,
    org_id=str(org_id), vpn_id=str(vpn_id))
getOrgVpn:
  skip: true

listOrgWebhooks:
  add_parameter:
    name: webhook_id
    type: string
    format: uuid
    description:
      ID of the Webhook to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.webhooks.getOrgWebhook(apisession,
    org_id=str(org_id), webhook_id=str(webhook_id))
getOrgWebhook:
  skip: true

listOrgWxRules:
  add_parameter:
    name: wxrule_id
    type: string
    format: uuid
    description:
      ID of the WX Rule to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.wxrules.getOrgWxRule(apisession,
    org_id=str(org_id), wxrule_id=str(wxrule_id))
getOrgWxRule:
  skip: true

listOrgWxTags:
  add_parameter:
    name: wxtag_id
    type: string
    format: uuid
    description:
      ID of the WX Tag to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.wxtags.getOrgWxTag(apisession,
    org_id=str(org_id), wxtag_id=str(wxtag_id))
getOrgWxTag:
  skip: true

listSiteDevices:
  add_parameter:
    name: device_id
    type: string
    format: uuid
    description:
      ID of the Device to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.devices.getSiteDevice(apisession,
    site_id=str(site_id), device_id=str(device_id))
getSiteDevice:
  skip: true

listSiteRoamingEvents:
  skip: true

listSiteEvpnTopologies:
  add_parameter:
    name: evpn_topology_id
    type: string
    format: uuid
    description: ID of the EVPN Topology to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.sites.evpn_topologies.getSiteEvpnTopology(apisession,
    site_id=str(site_id), evpn_topology_id=str(evpn_topology_id))
getSiteEvpnTopology:
  skip: true

listSiteMaps:
  add_parameter:
    name: map_id
    type: string
    format: uuid
    description:
      ID of the Map to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.maps.getSiteMap(apisession,
    site_id=str(site_id), map_id=str(map_id))
getSiteMap:
  skip: true

listSiteMxEdges:
  add_parameter:
    name: mxedge_id
    type: string
    format: uuid
    description:
      ID of the MX Edge to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.mxedges.getSiteMxEdge(apisession,
    site_id=str(site_id), mxedge_id=str(mxedge_id))
getSiteMxEdge:
  skip: true

listSitePsks:
  add_parameter:
    name: psk_id
    type: string
    format: uuid
    description:
      ID of the PSK to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.psks.getSitePsk(apisession,
    site_id=str(site_id), psk_id=str(psk_id))
getSitePsk:
  skip: true

listSiteWebhooks:
  add_parameter:
    name: webhook_id
    type: string
    format: uuid
    description:
      ID of the Webhook to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.webhooks.getSiteWebhook(apisession,
    site_id=str(site_id), webhook_id=str(webhook_id))
getSiteWebhook:
  skip: true

listOrgsWlans:
  add_parameter:
    name: wlan_id
    type: string
    format: uuid
    description:
      ID of the WLAN to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.wlans.getOrgWLAN(apisession,
    org_id=str(org_id), wlan_id=str(wlan_id))
getOrgWLAN:
  skip: true

listSiteWlans:
  add_parameter:
    name: wlan_id
    type: string
    format: uuid
    description:
      ID of the WLAN to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.wlans.getSiteWlan(apisession,
    site_id=str(site_id), wlan_id=str(wlan_id))
getSiteWlan:
  skip: true

listSiteWxRules:
  add_parameter:
    name: wxrule_id
    type: string
    format: uuid
    description:
      ID of the WX Rule to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.wxrules.getSiteWxRule(apisession,
    site_id=str(site_id), wxrule_id=str(wxrule_id))
getSiteWxRule:
  skip: true

listSiteWxTags:
  add_parameter:
    name: wxtag_id
    type: string
    format: uuid
    description:
      ID of the WX Tag to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.wxtags.getSiteWxTag(apisession,
    site_id=str(site_id), wxtag_id=str(wxtag_id))
getSiteWxTag:
  skip: true

listSiteWirelessClientsStats:
  add_parameters:
    name: client_mac
    type: string
    description: MAC Address of the Wireless Client to filter by. Providing this
      parameter will return only the specified object and may provide additional
      information.
  custom_request:
    mistapi.api.v1.sites.stats.getSiteWirelessClientStats(apisession,
    site_id=str(site_id), client_mac=str(client_mac))
getSiteWirelessClientStats:
  skip: true

listSiteMxEdgesStats:
  add_parameter:
    name: mxedge_id
    type: string
    format: uuid
    description:
      ID of the MX Edge to filter by. Providing this parameter will return
      only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.stats.getSiteMxEdgeStats(apisession,
    site_id=str(site_id), mxedge_id=str(mxedge_id))
getSiteMxEdgeStats:
  skip: true

listOrgDeviceUpgrades:
  add_parameter:
    name: upgrade_id
    type: string
    format: uuid
    description: ID of the Device Upgrade to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.devices.getOrgDeviceUpgrade(apisession,
    org_id=str(org_id), upgrade_id=str(upgrade_id))
getOrgDeviceUpgrade:
  skip: true

listOrgMxEdgeUpgrades:
  add_parameter:
    name: upgrade_id
    type: string
    format: uuid
    description:
      ID of the MX Edge Upgrade to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.mxedges.getOrgMxEdgeUpgrade(apisession,
    org_id=str(org_id), upgrade_id=str(upgrade_id))
getOrgMxEdgeUpgrade:
  skip: true

# listOrgSsrUpgrades:
#   add_parameter:
#     name: upgrade_id
#     type: string
#     format: uuid
#     description:
#       ID of the SSR Upgrade to filter by. Providing this parameter will
#       return only the specified object and may provide additional information.
#   custom_request: mistapi.api.v1.orgs.upgrades.getOrgSsrUpgrade(apisession,
#     org_id=str(org_id), upgrade_id=str(upgrade_id))
# getOrgSsrUpgrade:
#   skip: true

listSiteDeviceUpgrades:
  add_parameter:
    name: upgrade_id
    type: string
    format: uuid
    description: ID of the Device Upgrade to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.devices.getSiteDeviceUpgrade(apisession,
    site_id=str(site_id), upgrade_id=str(upgrade_id))
getSiteDeviceUpgrade:
  skip: true

searchOrgUserMacs:
  add_parameter:
    name: usermac_id
    type: string
    format: uuid
    description: ID of the User MAC to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.usermacs.getOrgUserMac(apisession, org_id=str(org_id), usermac_id=str(usermac_id))
getOrgUserMac:
  skip: true

listSiteRogueAPs:
  add_parameter:
    name: rogue_bssid
    type: string
    description:
      BSSID of the Rogue Access Point to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request:
    mistapi.api.v1.sites.rogues.getSiteRogueAP(apisession,site_id=str(site_id),
    rogue_bssid=rogue_bssid)
getSiteRogueAP:
  skip: true

searchSiteSyntheticTest:
  add_parameter:
    name: device_id
    type: string
    format: uuid
    description:
      ID of the Device that ran the test to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.devices.getSiteDeviceSyntheticTest(apisession, site_id=str(site_id), device_id=str(device_id))
getSiteDeviceSyntheticTest:
  skip: true

listOrgSiteGroups:
  add_parameter:
    name: sitegroup_id
    type: string
    format: uuid
    description: ID of the Site Group to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.sitegroups.getOrgSiteGroup(apisession, org_id=str(org_id), sitegroup_id=str(sitegroup_id))
getOrgSiteGroup:
  skip: true

listOrgGuestAuthorizations:
  add_parameter:
    name: guest_mac
    type: string
    description: MAC Address of the Guest client to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.orgs.guests.getOrgGuestAuthorization(apisession, org_id=str(org_id), guest_mac=guest_mac)
getOrgGuestAuthorization:
  skip: true

listSiteAllGuestAuthorizations:
  add_parameter:
    name: guest_mac
    type: string
    description: MAC Address of the Guest client to filter by. Providing this parameter
      will return only the specified object and may provide additional information.
  custom_request: mistapi.api.v1.sites.guests.getSiteGuestAuthorization(apisession, org_id=str(site_id), guest_mac=guest_mac)
getSiteGuestAuthorization:
  skip: true
